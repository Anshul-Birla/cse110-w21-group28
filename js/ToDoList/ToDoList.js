import{Task}from"./Task.js";class ToDoList extends HTMLElement{constructor(){super(),this.taskList=[],this.idCounter=0}addTask(t,s,e=0,a=!1,i=!1){if(void 0===t)throw new Error("Undefined Name");if(""===t)throw new Error("Empty Name");if(void 0===s)throw new Error("Undefined Length Task");if(0===s)throw new Error("0 Length Task");if(Number.isNaN(s))throw new Error("Number Not Passed In");const o=new Task(this.idCounter,t,s,e,a);o.addEventListener("task-checked-off",(()=>{const t=new CustomEvent("task-checked-off",{});this.dispatchEvent(t)})),o.addEventListener("task-unchecked",(()=>{const t=new CustomEvent("task-unchecked",{});this.dispatchEvent(t)})),o.addEventListener("task-deleted",(t=>{const s=new CustomEvent("task-deleted",{detail:t.detail});this.dispatchEvent(s)}));const n=new CustomEvent("task-added",{detail:{taskName:t,duration:s}});return this.dispatchEvent(n),this.idCounter+=1,this.taskList.push(o),i||this.addTaskToLocalStorage(o),o}addTaskToLocalStorage(t,s){const e=[t.id,t.name,t.totalSessions,t.currentSessionNum,t.checked];void 0===s?window.localData.push(e):window.localData.splice(s,0,e),localStorage.setItem("tasks",JSON.stringify(window.localData))}getCurrentTask(){for(let t=0;t<this.taskList.length;t+=1)if(!this.taskList[t].checked)return this.taskList[t];return null}getTaskById(t){for(let s=0;s<this.taskList.length;s+=1)if(Number(this.taskList[s].id)===Number(t))return this.taskList[s];return null}removeTask(t){let s=-1;for(let e=0;e<this.taskList.length;e+=1)Number(this.taskList[e].id)===Number(t)&&(s=e);return-1!==s&&(this.taskList.splice(s,1),!0)}addTaskToTop(t){this.taskList.unshift(t),this.addTaskToLocalStorage(t,0)}addTaskToEnd(t){if(t.checked)this.taskList.push(t),this.addTaskToLocalStorage(t);else{let s=-1;for(let t=0;t<this.taskList.length&&-1===s;t+=1)!0===this.taskList[t].checked&&(s=t);-1===s?(this.taskList.push(t),this.addTaskToLocalStorage(t)):(this.taskList.splice(s,0,t),this.addTaskToLocalStorage(t,s))}}}customElements.define("custom-todolist",ToDoList);export{ToDoList};
